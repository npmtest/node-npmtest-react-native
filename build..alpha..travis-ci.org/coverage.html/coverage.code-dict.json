{"/home/travis/build/npmtest/node-npmtest-react-native/test.js":"/* istanbul instrument in package npmtest_react_native */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-native/lib.npmtest_react_native.js":"/* istanbul instrument in package npmtest_react_native */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_native = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_native = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-native/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-native && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_native */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_native\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_native.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_native.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_native.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_native.__dirname + '/lib.npmtest_react_native.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/Libraries/react-native/react-native-implementation.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule react-native-implementation\n * @noflow - get/set properties not yet supported by flow. also `...require(x)` is broken #6560135\n */\n'use strict';\n\nconst warning = require('fbjs/lib/warning');\n\nif (__DEV__) {\n  var warningDedupe = {};\n  var addonWarn = function(prevName, newPackageName) {\n    warning(\n      warningDedupe[prevName],\n      'React.addons.' + prevName + ' is deprecated. Please import the \"' +\n      newPackageName + '\" package instead.'\n    );\n    warningDedupe[prevName] = true;\n  };\n}\n\n// Export React, plus some native additions.\nconst ReactNative = {\n  // Components\n  get AccessibilityInfo() { return require('AccessibilityInfo'); },\n  get ActivityIndicator() { return require('ActivityIndicator'); },\n  get ART() { return require('ReactNativeART'); },\n  get Button() { return require('Button'); },\n  get DatePickerIOS() { return require('DatePickerIOS'); },\n  get DrawerLayoutAndroid() { return require('DrawerLayoutAndroid'); },\n  get FlatList() { return require('FlatList'); },\n  get Image() { return require('Image'); },\n  get ImageEditor() { return require('ImageEditor'); },\n  get ImageStore() { return require('ImageStore'); },\n  get KeyboardAvoidingView() { return require('KeyboardAvoidingView'); },\n  get ListView() { return require('ListView'); },\n  get MapView() { return require('MapView'); },\n  get Modal() { return require('Modal'); },\n  get Navigator() { return require('Navigator'); },\n  get NavigatorIOS() { return require('NavigatorIOS'); },\n  get Picker() { return require('Picker'); },\n  get PickerIOS() { return require('PickerIOS'); },\n  get ProgressBarAndroid() { return require('ProgressBarAndroid'); },\n  get ProgressViewIOS() { return require('ProgressViewIOS'); },\n  get ScrollView() { return require('ScrollView'); },\n  get SectionList() { return require('SectionList'); },\n  get SegmentedControlIOS() { return require('SegmentedControlIOS'); },\n  get Slider() { return require('Slider'); },\n  get SnapshotViewIOS() { return require('SnapshotViewIOS'); },\n  get Switch() { return require('Switch'); },\n  get RefreshControl() { return require('RefreshControl'); },\n  get StatusBar() { return require('StatusBar'); },\n  get SwipeableListView() { return require('SwipeableListView'); },\n  get TabBarIOS() { return require('TabBarIOS'); },\n  get Text() { return require('Text'); },\n  get TextInput() { return require('TextInput'); },\n  get ToastAndroid() { return require('ToastAndroid'); },\n  get ToolbarAndroid() { return require('ToolbarAndroid'); },\n  get Touchable() { return require('Touchable'); },\n  get TouchableHighlight() { return require('TouchableHighlight'); },\n  get TouchableNativeFeedback() { return require('TouchableNativeFeedback'); },\n  get TouchableOpacity() { return require('TouchableOpacity'); },\n  get TouchableWithoutFeedback() { return require('TouchableWithoutFeedback'); },\n  get View() { return require('View'); },\n  get ViewPagerAndroid() { return require('ViewPagerAndroid'); },\n  get VirtualizedList() { return require('VirtualizedList'); },\n  get WebView() { return require('WebView'); },\n\n  // APIs\n  get ActionSheetIOS() { return require('ActionSheetIOS'); },\n  get AdSupportIOS() { return require('AdSupportIOS'); },\n  get Alert() { return require('Alert'); },\n  get AlertIOS() { return require('AlertIOS'); },\n  get Animated() { return require('Animated'); },\n  get AppRegistry() { return require('AppRegistry'); },\n  get AppState() { return require('AppState'); },\n  get AsyncStorage() { return require('AsyncStorage'); },\n  get BackAndroid() { return require('BackAndroid'); },\n  get CameraRoll() { return require('CameraRoll'); },\n  get Clipboard() { return require('Clipboard'); },\n  get DatePickerAndroid() { return require('DatePickerAndroid'); },\n  get Dimensions() { return require('Dimensions'); },\n  get Easing() { return require('Easing'); },\n  get I18nManager() { return require('I18nManager'); },\n  get ImagePickerIOS() { return require('ImagePickerIOS'); },\n  get InteractionManager() { return require('InteractionManager'); },\n  get Keyboard() { return require('Keyboard'); },\n  get LayoutAnimation() { return require('LayoutAnimation'); },\n  get Linking() { return require('Linking'); },\n  get NativeEventEmitter() { return require('NativeEventEmitter'); },\n  get NavigationExperimental() { return require('NavigationExperimental'); },\n  get NetInfo() { return require('NetInfo'); },\n  get PanResponder() { return require('PanResponder'); },\n  get PermissionsAndroid() { return require('PermissionsAndroid'); },\n  get PixelRatio() { return require('PixelRatio'); },\n  get PushNotificationIOS() { return require('PushNotificationIOS'); },\n  get Settings() { return require('Settings'); },\n  get Share() { return require('Share'); },\n  get StatusBarIOS() { return require('StatusBarIOS'); },\n  get StyleSheet() { return require('StyleSheet'); },\n  get Systrace() { return require('Systrace'); },\n  get TimePickerAndroid() { return require('TimePickerAndroid'); },\n  get UIManager() { return require('UIManager'); },\n  get Vibration() { return require('Vibration'); },\n  get VibrationIOS() { return require('VibrationIOS'); },\n\n  // Plugins\n  get DeviceEventEmitter() { return require('RCTDeviceEventEmitter'); },\n  get NativeAppEventEmitter() { return require('RCTNativeAppEventEmitter'); },\n  get NativeModules() { return require('NativeModules'); },\n  get Platform() { return require('Platform'); },\n  get processColor() { return require('processColor'); },\n  get requireNativeComponent() { return require('requireNativeComponent'); },\n\n  // Prop Types\n  get ColorPropType() { return require('ColorPropType'); },\n  get EdgeInsetsPropType() { return require('EdgeInsetsPropType'); },\n  get PointPropType() { return require('PointPropType'); },\n};\n\n// Better error messages when accessing React APIs on ReactNative\nif (__DEV__) {\n  const throwOnWrongReactAPI = require('throwOnWrongReactAPI');\n  const reactAPIs = [ 'createClass', 'Component' ];\n\n  for (const key of reactAPIs) {\n    Object.defineProperty(ReactNative, key, {\n      get() { throwOnWrongReactAPI(key); },\n      enumerable: false,\n      configurable: false,\n    });\n  }\n}\n\n// Preserve getters with warnings on the internal ReactNative copy without\n// invoking them.\nconst ReactNativeInternal = require('ReactNative');\nfunction applyForwarding(key) {\n  if (__DEV__) {\n    Object.defineProperty(\n      ReactNative,\n      key,\n      Object.getOwnPropertyDescriptor(ReactNativeInternal, key)\n    );\n    return;\n  }\n  ReactNative[key] = ReactNativeInternal[key];\n}\nfor (const key in ReactNativeInternal) {\n  applyForwarding(key);\n}\nmodule.exports = ReactNative;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/Libraries/Promise.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Promise\n * @flow\n */\n'use strict';\n\nconst Promise = require('fbjs/lib/Promise.native');\n\nif (__DEV__) {\n  require('promise/setimmediate/rejection-tracking').enable({\n    allRejections: true,\n    onUnhandled: (id, error = {}) => {\n      const {message = null, stack = null} = error;\n      const warning =\n        `Possible Unhandled Promise Rejection (id: ${id}):\\n` +\n        (message == null ? '' : `${message}\\n`) +\n        (stack == null ? '' : stack);\n      console.warn(warning);\n    },\n    onHandled: (id) => {\n      const warning =\n        `Promise Rejection Handled (id: ${id})\\n` +\n        'This means you can ignore any previous messages of the form ' +\n        `\"Possible Unhandled Promise Rejection (id: ${id}):\"`;\n      console.warn(warning);\n    },\n  });\n}\n\nmodule.exports = Promise;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/Libraries/promiseRejectionIsError.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule promiseRejectionIsError\n * @flow\n */\n'use strict';\n\nrequire('Promise'); // make sure the default rejection handler is installed\nconst rejectionTracking = require('promise/setimmediate/rejection-tracking');\n\nmodule.exports = () => {\n  rejectionTracking.enable({\n    allRejections: true,\n    onUnhandled: (id, error) => {\n      console.error(error);\n    },\n    onHandled: () => {},\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/cli.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nmodule.exports = require('./local-cli/cli.js');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/local-cli/cli.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\n// gracefulify() has to be called before anything else runs\nrequire('graceful-fs').gracefulify(require('fs'));\n\n// This file must be able to run in node 0.12 without babel so we can show that\n// it is not supported. This is why the rest of the cli code is in `cliEntry.js`.\nrequire('./server/checkNodeVersion')();\n\nrequire('../setupBabel')();\n\nvar cliEntry = require('./cliEntry');\n\nif (require.main === module) {\n  cliEntry.run();\n}\n\nmodule.exports = cliEntry;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/local-cli/server/checkNodeVersion.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar chalk = require('chalk');\nvar formatBanner = require('./formatBanner');\nvar semver = require('semver');\n\nmodule.exports = function() {\n  if (!semver.satisfies(process.version, '>=4')) {\n    var engine = semver.satisfies(process.version, '<1')\n      ? 'Node'\n      : 'io.js';\n\n    var message = 'You are currently running ' + engine + ' ' +\n      process.version + '.\\n' +\n      '\\n' +\n      'React Native runs on Node 4.0 or newer. There are several ways to ' +\n      'upgrade Node.js depending on your preference.\\n' +\n      '\\n' +\n      'nvm:       nvm install node && nvm alias default node\\n' +\n      'Homebrew:  brew unlink iojs; brew install node\\n' +\n      'Installer: download the Mac .pkg from https://nodejs.org/\\n' +\n      '\\n' +\n      'About Node.js:   https://nodejs.org\\n' +\n      'Follow along at: https://github.com/facebook/react-native/issues/2545';\n    console.log(formatBanner(message, {\n      chalkFunction: chalk.green,\n      marginLeft: 1,\n      marginRight: 1,\n      paddingBottom: 1,\n    }));\n    process.exit(1);\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/local-cli/server/formatBanner.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar _ = require('lodash');\nvar wordwrap = require('wordwrap');\n\nvar HORIZONTAL_LINE = '\\u2500';\nvar VERTICAL_LINE = '\\u2502';\nvar TOP_LEFT = '\\u250c';\nvar TOP_RIGHT = '\\u2510';\nvar BOTTOM_LEFT = '\\u2514';\nvar BOTTOM_RIGHT = '\\u2518';\n\n/**\n * Prints a banner with a border around it containing the given message. The\n * following options are supported:\n *\n * type Options = {\n *   // A function to apply to each line of text to decorate it\n *   chalkFunction: (string: message) => string;\n *   // The total width (max line length) of the banner, including margin and\n *   // padding (default = 80)\n *   width: number;\n *   // How much leading space to prepend to each line (default = 0)\n *   marginLeft: number;\n *   // How much trailing space to append to each line (default = 0)\n *   marginRight: number;\n *   // Space between the top banner border and the text (default = 0)\n *   paddingTop: number;\n *   // Space between the bottom banner border and the text (default = 0)\n *   paddingBottom: number;\n *   // Space between the left banner border and the text (default = 2)\n *   paddingLeft: number;\n *   // Space between the right banner border and the text (default = 2)\n *   paddingRight: number;\n * };\n */\nfunction formatBanner(message, options) {\n  options = options || {};\n  _.defaults(options, {\n    chalkFunction: _.identity,\n    width: 80,\n    marginLeft: 0,\n    marginRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 2,\n    paddingRight: 2,\n  });\n\n  var width = options.width;\n  var marginLeft = options.marginLeft;\n  var marginRight = options.marginRight;\n  var paddingTop = options.paddingTop;\n  var paddingBottom = options.paddingBottom;\n  var paddingLeft = options.paddingLeft;\n  var paddingRight = options.paddingRight;\n\n  var horizSpacing = marginLeft + paddingLeft + paddingRight + marginRight;\n  // 2 for the banner borders\n  var maxLineWidth = width - horizSpacing - 2;\n  var wrap = wordwrap(maxLineWidth);\n  var body = wrap(message);\n\n  var left = spaces(marginLeft) + VERTICAL_LINE + spaces(paddingLeft);\n  var right = spaces(paddingRight) + VERTICAL_LINE + spaces(marginRight);\n  var bodyLines = _.flattenDeep([\n    arrayOf('', paddingTop),\n    body.split('\\n'),\n    arrayOf('', paddingBottom),\n  ]).map(function(line) {\n    var padding = spaces(Math.max(0, maxLineWidth - line.length));\n    return left + options.chalkFunction(line) + padding + right;\n  });\n\n  var horizontalBorderLine = repeatString(\n    HORIZONTAL_LINE,\n    width - marginLeft - marginRight - 2\n  );\n  var top = spaces(marginLeft) + TOP_LEFT + horizontalBorderLine + TOP_RIGHT +\n    spaces(marginRight);\n  var bottom = spaces(marginLeft) + BOTTOM_LEFT + horizontalBorderLine +\n    BOTTOM_RIGHT + spaces(marginRight);\n  return _.flattenDeep([top, bodyLines, bottom]).join('\\n');\n}\n\nfunction spaces(number) {\n  return repeatString(' ', number);\n}\n\nfunction repeatString(string, number) {\n  return new Array(number + 1).join(string);\n}\n\nfunction arrayOf(value, number) {\n  return _.range(number).map(function() {\n    return value;\n  });\n}\n\nmodule.exports = formatBanner;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/setupBabel.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nconst babelRegisterOnly = require('./packager/babelRegisterOnly');\nconst escapeRegExp = require('lodash/escapeRegExp');\nconst path = require('path');\n\nconst BABEL_ENABLED_PATHS = [\n  'packager/react-packager.js',\n  'packager/src',\n  'packager/transformer.js',\n  'local-cli',\n];\n\n/**\n * We use absolute paths for matching only the top-level folders reliably. For\n * example, we would not want to match some deeply nested forder that happens to\n * have the same name as one of `BABEL_ENABLED_PATHS`.\n */\nfunction buildRegExps(basePath, dirPaths) {\n  return dirPaths.map(folderPath =>\n    // Babel `only` option works with forward slashes in the RegExp so replace\n    // backslashes for Windows.\n    new RegExp(`^${escapeRegExp(path.resolve(basePath, folderPath).replace(/\\\\/g, '/'))}`)\n  );\n}\n\nfunction getOnlyList() {\n  return buildRegExps(__dirname, BABEL_ENABLED_PATHS);\n}\n\n/**\n * Centralized place to register all the directories that need a Babel\n * transformation before being fed to Node.js. Notably, this is necessary to\n * support Flow type annotations.\n */\nfunction setupBabel() {\n  babelRegisterOnly(getOnlyList());\n}\n\nsetupBabel.buildRegExps = buildRegExps;\nsetupBabel.getOnlyList = getOnlyList;\nmodule.exports = setupBabel;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/packager/babelRegisterOnly.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nArray.prototype.values || require('core-js/fn/array/values');\nObject.entries || require('core-js/fn/object/entries');\nObject.values || require('core-js/fn/object/values');\n\nvar _only = [];\n\nfunction registerOnly(onlyList) {\n  require('babel-register')(config(onlyList));\n}\n\nfunction config(onlyList) {\n  _only = _only.concat(onlyList);\n  return {\n    presets: ['es2015-node'],\n    plugins: [\n      'transform-flow-strip-types',\n      'syntax-trailing-function-commas',\n      'transform-object-rest-spread',\n      'transform-async-to-generator',\n    ],\n    only: _only,\n    retainLines: true,\n    sourceMaps: 'inline',\n    babelrc: false,\n  };\n}\n\nmodule.exports = exports = registerOnly;\nexports.config = config;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/packager/blacklist.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar path = require('path');\n\n// Don't forget to everything listed here to `package.json`\n// modulePathIgnorePatterns.\nvar sharedBlacklist = [\n  /node_modules[/\\\\]react[/\\\\]dist[/\\\\].*/,\n\n  /website\\/node_modules\\/.*/,\n\n  // TODO(jkassens, #9876132): Remove this rule when it's no longer needed.\n  'Libraries/Relay/relay/tools/relayUnstableBatchedUpdates.js',\n\n  /heapCapture\\/bundle\\.js/,\n];\n\nfunction escapeRegExp(pattern) {\n  if (Object.prototype.toString.call(pattern) === '[object RegExp]') {\n    return pattern.source.replace(/\\//g, path.sep);\n  } else if (typeof pattern === 'string') {\n    var escaped = pattern.replace(/[\\-\\[\\]\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    // convert the '/' into an escaped local file separator\n    return escaped.replace(/\\//g, '\\\\' + path.sep);\n  } else {\n    throw new Error('Unexpected packager blacklist pattern: ' + pattern);\n  }\n}\n\nfunction blacklist(additionalBlacklist) {\n  return new RegExp('(' +\n    (additionalBlacklist || []).concat(sharedBlacklist)\n      .map(escapeRegExp)\n      .join('|') +\n    ')$'\n  );\n}\n\nmodule.exports = blacklist;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/packager/defaults.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nexports.assetExts =  [\n  'bmp', 'gif', 'jpg', 'jpeg', 'png', 'psd', 'svg', 'webp', // Image formats\n  'm4v', 'mov', 'mp4', 'mpeg', 'mpg', 'webm', // Video formats\n  'aac', 'aiff', 'caf', 'm4a', 'mp3', 'wav', // Audio formats\n  'html', 'pdf', // Document formats\n];\n\nexports.moduleSystem = require.resolve('./src/Resolver/polyfills/require.js');\n\nexports.platforms = ['ios', 'android', 'windows', 'web'];\n\nexports.polyfills = [\n  require.resolve('./src/Resolver/polyfills/Object.es6.js'),\n  require.resolve('./src/Resolver/polyfills/console.js'),\n  require.resolve('./src/Resolver/polyfills/error-guard.js'),\n  require.resolve('./src/Resolver/polyfills/Number.es6.js'),\n  require.resolve('./src/Resolver/polyfills/String.prototype.es6.js'),\n  require.resolve('./src/Resolver/polyfills/Array.prototype.es6.js'),\n  require.resolve('./src/Resolver/polyfills/Array.es6.js'),\n  require.resolve('./src/Resolver/polyfills/Object.es7.js'),\n  require.resolve('./src/Resolver/polyfills/babelHelpers.js'),\n];\n\nexports.providesModuleNodeModules = [\n  'react-native',\n  'react-native-windows',\n];\n\nexports.runBeforeMainModule = [\n  // Ensures essential globals are available and are patched correctly.\n  'InitializeCore',\n];\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/flow/Map.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @nolint\n */\n\n/* eslint-disable */\n\n// These annotations are copy/pasted from the built-in Flow definitions for\n// Native Map.\n\ndeclare module \"Map\" {\n  // Use the name \"MapPolyfill\" so that we don't get confusing error\n  // messages about \"Using Map instead of Map\".\n  declare class MapPolyfill<K, V> {\n    @@iterator(): Iterator<[K, V]>;\n    constructor<Key, Value>(_: void): MapPolyfill<Key, Value>;\n    constructor<Key, Value>(_: null): MapPolyfill<Key, Value>;\n    constructor<Key, Value>(iterable: Array<[Key, Value]>): MapPolyfill<Key, Value>;\n    constructor<Key, Value>(iterable: Iterable<[Key, Value]>): MapPolyfill<Key, Value>;\n    clear(): void;\n    delete(key: K): boolean;\n    entries(): Iterator<[K, V]>;\n    forEach(callbackfn: (value: V, index: K, map: MapPolyfill<K, V>) => mixed, thisArg?: any): void;\n    get(key: K): V | void;\n    has(key: K): boolean;\n    keys(): Iterator<K>;\n    set(key: K, value: V): MapPolyfill<K, V>;\n    size: number;\n    values(): Iterator<V>;\n  }\n\n  // Don't \"declare class exports\" directly, otherwise in error messages our\n  // show up as \"exports\" instead of \"Map\" or \"MapPolyfill\".\n  declare var exports: typeof MapPolyfill;\n}\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/flow/Position.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @nolint\n */\n\n/* eslint-disable */\n\ndeclare class Position {\n  coords: Coordinates,\n  timestamp: number,\n  mocked: boolean,\n}\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/flow/Set.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @nolint\n */\n\n/* eslint-disable */\n\n// These annotations are copy/pasted from the built-in Flow definitions for\n// Native Set.\n\ndeclare module \"Set\" {\n  // Use the name \"SetPolyfill\" so that we don't get confusing error\n  // messages about \"Using Set instead of Set\".\n  declare class SetPolyfill<T> {\n    @@iterator(): Iterator<T>;\n    add(value: T): SetPolyfill<T>;\n    clear(): void;\n    delete(value: T): boolean;\n    entries(): Iterator<[T, T]>;\n    forEach(callbackfn: (value: T, index: T, set: SetPolyfill<T>) => mixed, thisArg?: any): void;\n    has(value: T): boolean;\n    keys(): Iterator<T>;\n    size: number;\n    values(): Iterator<T>;\n  }\n\n  // Don't \"declare class exports\" directly, otherwise in error messages our\n  // show up as \"exports\" instead of \"Set\" or \"SetPolyfill\".\n  declare var exports: typeof SetPolyfill;\n}\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/flow/console.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @nolint\n */\n\n/* eslint-disable */\n\ndeclare module 'console' {\n  declare function assert(value: any, ...message: any): void;\n  declare function dir(\n    obj: Object,\n    options: {showHidden: boolean, depth: number, colors: boolean},\n  ): void;\n  declare function error(...data: any): void;\n  declare function info(...data: any): void;\n  declare function log(...data: any): void;\n  declare function time(label: any): void;\n  declare function timeEnd(label: any): void;\n  declare function trace(first: any, ...rest: any): void;\n  declare function warn(...data: any): void;\n  declare class Console {\n    assert(value: any, ...message: any): void,\n    dir(\n      obj: Object,\n      options: {showHidden: boolean, depth: number, colors: boolean},\n    ): void,\n    error(...data: any): void,\n    info(...data: any): void,\n    log(...data: any): void,\n    time(label: any): void,\n    timeEnd(label: any): void,\n    trace(first: any, ...rest: any): void,\n    warn(...data: any): void,\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/flow/fbjs.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\ndeclare module 'fbjs/lib/invariant' {\n  declare function exports<T>(condition: any, message: string, ...args: Array<any>): void;\n}\n\ndeclare module 'fbjs/lib/nullthrows' {\n  declare function exports<T>(value: ?T): T;\n}\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/flow/react.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @nolint\n */\n\n/* eslint-disable */\n\n// Temporary patches for React.Component and React.Element.\ndeclare var ReactComponent: typeof React$Component;\ndeclare var ReactElement: typeof React$Element;\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/jest/mockComponent.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nmodule.exports = moduleName => {\n  const RealComponent = require.requireActual(moduleName);\n  const React = require('react');\n\n  const Component = class extends RealComponent {\n    render() {\n      const name = RealComponent.displayName || RealComponent.name;\n\n      return React.createElement(\n        name.replace(/^(RCT|RK)/,''),\n        this.props,\n        this.props.children,\n      );\n    }\n  };\n  return Component;\n};\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/jest/preprocessor.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst babel = require('babel-core');\nconst babelRegisterOnly = require('../packager/babelRegisterOnly');\nconst createCacheKeyFunction = require('fbjs-scripts/jest/createCacheKeyFunction');\nconst path = require('path');\n\nconst nodeFiles = RegExp([\n  '/local-cli/',\n  '/packager/(?!src/Resolver/polyfills/)',\n].join('|'));\nconst nodeOptions = babelRegisterOnly.config([nodeFiles]);\n\nbabelRegisterOnly([]);\n// has to be required after setting up babelRegisterOnly\nconst transformer = require('../packager/transformer.js');\n\nmodule.exports = {\n  process(src, file) {\n    if (nodeFiles.test(file)) { // node specific transforms only\n      return babel.transform(\n        src,\n        Object.assign({filename: file}, nodeOptions)\n      ).code;\n    }\n\n    return transformer.transform(src, file, {inlineRequires: true}).code;\n  },\n\n  getCacheKey: createCacheKeyFunction([\n    __filename,\n    path.join(__dirname, '../packager/transformer.js'),\n    require.resolve('babel-core/package.json'),\n  ]),\n};\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/jest/setup.js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst mockComponent = require.requireActual('./mockComponent');\n\nrequire.requireActual('../packager/src/Resolver/polyfills/babelHelpers.js');\nrequire.requireActual('../packager/src/Resolver/polyfills/Object.es7.js');\nrequire.requireActual('../packager/src/Resolver/polyfills/error-guard');\n\nglobal.__DEV__ = true;\n\nglobal.Promise = require.requireActual('promise');\nglobal.regeneratorRuntime = require.requireActual('regenerator-runtime/runtime');\n\njest\n  .mock('setupDevtools')\n  .mock('npmlog');\n\n// there's a __mock__ for it.\njest.setMock('ErrorUtils', require('ErrorUtils'));\n\njest\n  .mock('InitializeCore')\n  .mock('Image', () => mockComponent('Image'))\n  .mock('Text', () => mockComponent('Text'))\n  .mock('TextInput', () => mockComponent('TextInput'))\n  .mock('Modal', () => mockComponent('Modal'))\n  .mock('View', () => mockComponent('View'))\n  .mock('RefreshControl', () => require.requireMock('RefreshControlMock'))\n  .mock('ScrollView', () => require.requireMock('ScrollViewMock'))\n  .mock(\n    'ActivityIndicator',\n    () => mockComponent('ActivityIndicator'),\n  )\n  .mock('ListView', () => require.requireMock('ListViewMock'))\n  .mock('ListViewDataSource', () => {\n    const DataSource = require.requireActual('ListViewDataSource');\n    DataSource.prototype.toJSON = function() {\n      function ListViewDataSource(dataBlob) {\n        this.items = 0;\n        // Ensure this doesn't throw.\n        try {\n          Object.keys(dataBlob).forEach(key => {\n            this.items += dataBlob[key] && (\n              dataBlob[key].length || dataBlob[key].size || 0\n            );\n          });\n        } catch (e) {\n          this.items = 'unknown';\n        }\n      }\n\n      return new ListViewDataSource(this._dataBlob);\n    };\n    return DataSource;\n  })\n  .mock('ensureComponentIsNative', () => () => true);\n\nconst mockEmptyObject = {};\nconst mockNativeModules = {\n  AlertManager: {\n    alertWithArgs: jest.fn(),\n  },\n  AppState: {\n    addEventListener: jest.fn(),\n  },\n  AsyncLocalStorage: {\n    clear: jest.fn(),\n    getItem: jest.fn(),\n    removeItem: jest.fn(),\n    setItem: jest.fn(),\n  },\n  BuildInfo: {\n    appVersion: '0',\n    buildVersion: '0',\n  },\n  Clipboard: {\n    setString: jest.fn(),\n  },\n  DataManager: {\n    queryData: jest.fn(),\n  },\n  FacebookSDK: {\n    login: jest.fn(),\n    logout: jest.fn(),\n    queryGraphPath: jest.fn((path, method, params, callback) => callback()),\n  },\n  FbRelayNativeAdapter: {\n    updateCLC: jest.fn(),\n  },\n  GraphPhotoUpload: {\n    upload: jest.fn(),\n  },\n  I18n: {\n    translationsDictionary: JSON.stringify({\n      'Good bye, {name}!|Bye message': '\\u{00A1}Adi\\u{00F3}s {name}!',\n    }),\n  },\n  ImageLoader: {\n    getSize: jest.fn(\n      (uri, success) => process.nextTick(() => success(320, 240))\n    ),\n    prefetchImage: jest.fn(),\n  },\n  ImageViewManager: {\n    getSize: jest.fn(\n      (uri, success) => process.nextTick(() => success(320, 240))\n    ),\n    prefetchImage: jest.fn(),\n  },\n  KeyboardObserver: {\n    addListener: jest.fn(),\n    removeListeners: jest.fn(),\n  },\n  ModalFullscreenViewManager: {},\n  Networking: {\n    sendRequest: jest.fn(),\n    abortRequest: jest.fn(),\n    addListener: jest.fn(),\n    removeListeners: jest.fn(),\n  },\n  SourceCode: {\n    scriptURL: null,\n  },\n  StatusBarManager: {\n    setColor: jest.fn(),\n    setStyle: jest.fn(),\n    setHidden: jest.fn(),\n    setNetworkActivityIndicatorVisible: jest.fn(),\n    setBackgroundColor: jest.fn(),\n    setTranslucent: jest.fn(),\n  },\n  Timing: {\n    createTimer: jest.fn(),\n    deleteTimer: jest.fn(),\n  },\n  UIManager: {\n    createView: jest.fn(),\n    setChildren: jest.fn(),\n    manageChildren: jest.fn(),\n    updateView: jest.fn(),\n    removeSubviewsFromContainerWithID: jest.fn(),\n    replaceExistingNonRootView: jest.fn(),\n    customBubblingEventTypes: {},\n    customDirectEventTypes: {},\n    Dimensions: {\n      window: {\n        fontScale: 2,\n        height: 1334,\n        scale: 2,\n        width: 750,\n      },\n    },\n    ModalFullscreenView: {\n      Constants: {},\n    },\n    ScrollView: {\n      Constants: {},\n    },\n    View: {\n      Constants: {},\n    },\n  },\n  WebSocketModule: {\n    connect: jest.fn(),\n    send: jest.fn(),\n    sendBinary: jest.fn(),\n    ping: jest.fn(),\n    close: jest.fn(),\n    addListener: jest.fn(),\n    removeListeners: jest.fn(),\n  },\n};\n\nObject.keys(mockNativeModules).forEach(module => {\n  try {\n    jest.doMock(module, () => mockNativeModules[module]); // needed by FacebookSDK-test\n  } catch (e) {\n    jest.doMock(module, () => mockNativeModules[module], {virtual: true});\n  }\n});\n\njest\n  .doMock('NativeModules', () => mockNativeModules)\n  .doMock('ReactNativePropRegistry', () => ({\n    register: id => id,\n    getByID: () => mockEmptyObject,\n  }));\n\njest.doMock('requireNativeComponent', () => {\n  const React = require('react');\n\n  return viewName => props => React.createElement(\n    viewName,\n    props,\n    props.children,\n  );\n});\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/InitializeJavaScriptAppEngine.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('InitializeCore');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/RCTEventEmitter.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('RCTEventEmitter');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/TextInputState.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('TextInputState');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/UIManager.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('UIManager');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/UIManagerStatTracker.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('UIManagerStatTracker');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/View.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('View');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/deepDiffer.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('deepDiffer');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/deepFreezeAndThrowOnMutationInDev.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('deepFreezeAndThrowOnMutationInDev');\n","/home/travis/build/npmtest/node-npmtest-react-native/node_modules/react-native/lib/flattenStyle.js":"/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n// This is a forwarding module to allow React to require React Native internals\n// as node dependency\nmodule.exports = require('flattenStyle');\n"}